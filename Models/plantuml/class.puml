@startuml
title Centralized medical management system - Class diagram
center footer Centralized medical management system - Class diagram

class PatientRegistry {
    + search(RAMQCode : String) : PatientFile
    + add(p: PatientFile)
}
PatientRegistry o--> "*" PatientFile

interface Registry{
    +add(t:T)
}
Registry <|.. DoctorRegistry
Registry <|.. PatientRegistry


interface Searchable {
    + search(t: T)
}
Searchable <|.. DoctorRegistry
Searchable <|.. PatientRegistry

class DoctorRegistry {
    + search(licenceNumber: String ) : Doctor
    + add(d: Doctor)
}
DoctorRegistry o--> "*" Doctor

class PatientFile{
     -String RAMQCode
     -String firstName
     -String lastName
     -Date dateOfBirth
     -String cityOfBirth
     -String[] knownParents
    - addVisit(v: MedicalVisit)
    - addHistory(h: MedicalHistory)
}
PatientFile *--> "0..*" MedicalHistory
PatientFile *--> "0..*" MedicalVisit
PatientFile --> "1" ContactInformation

abstract class User{
    - String firstName
    - String lastName
    - consult(p: PatientFile)
}

class RAMQEmployee {
    - consult(p: PatienFile)
    + modify(p: PatientFile)
    - reconstruct(p: PatientFile)
}
RAMQEmployee --|> User

Patient ..|> Modifiable
Doctor .|> Modifiable
Modifiable <|.. RAMQEmployee

abstract class HealthProfessional{
    -consult(p: PatientFile)
}
Doctor --|> HealthProfessional
HealthProfessional -|> User

class MedicalEstablishment{
    - String idEstablishment
    - String establishmentName
    - addContactInformation(c: ContactInformation)
}
MedicalEstablishment ->"1" ContactInformation
MedicalEstablishment "1" <- Doctor


class MedicalHistory{
    -String diagnostic
    -String treatment
    -String doctorName
    -Date startDisease
    -Date endDisease
    + getMedicalHistory(): MedicalHistory
}

class MedicalVisit{
    -String establishmentName
    -String doctorName
    -Date visitDate
    -String diagnostic
    -String treatment
    -String visitSummary
    -String notes
    +getMedicalVisit(): MedicalVisit
}

class Doctor{
    -String licenceNumber
    -String specialty
    -consult(p: PatientFile)
    +modify(p: PatientFile)
}

class Patient {
    -consult(p: PatientFile)
    +modify(c: ContactInformation)
}

class ContactInformation {
    - number: int
    - street: String
    - city: String
    - postalCode: String
    - phone: String
    - email: String
    - validatePhone(phone: String): boolean
    - validateEmail(email: String): boolean
    - validatePostalCode(code: String): boolean
    + getContactInformation(): ContactInformation
}

interface Modifiable {
    +modify(t: T)
}

enum Gender{
    FEMALE,
    MALE,
    OTHER
}
PatientFile -> Gender

User <|- Patient

@enduml
