@startuml
title Centralized medical management system - Class diagram
center footer Centralized medical management system - Class diagram

' TODO : Methods for each class.
' TODO : Add responsibilities? interfaces?
' TODO : clean up

class PatientRegistry {
+ search(RAMQCode : String) : PatientFile
+ add(p: PatientFile)
}
PatientRegistry o--> "*" PatientFile

interface Registry{
    +add(t:T)
}
Registry <|.. DoctorRegistry
Registry <|.. PatientRegistry


interface Searchable {
+ search(t: T)
}
Searchable <|.. DoctorRegistry
Searchable <|.. PatientRegistry

class DoctorRegistry {
+ search(licenceNumber: String ) : Doctor
+ add(d: Doctor)
}
DoctorRegistry o--> "*" Doctor

class PatientFile{
     -String RAMQCode
     - String firstName
     - String lastName
     -Date dateOfBirth
     -String cityOfBirth
     -String[] knownParents
'     -int InsuranceNumberCode
'    -PatientID patientID
'    -MedicalVisits[] medicalVisits
'    -MedicalHistory[] medicalHistory

    'PRIVATE METHODS
    - addVisit(v: MedicalVisit)
    - addHistory(h: MedicalHistory)
}

abstract class User{
- String firstName
- String lastName
'- String username
'- String password
- consult(p: PatientFile)
'- modify()
}

class RAMQEmployee {
+ modify(p: PatientFile)
- reconstruct(p: PatientFile)
}
RAMQEmployee --|> User

Patient ..|> Modifiable
Doctor .|> Modifiable
Modifiable <|.. RAMQEmployee

'class Patient{
'{method}
'}

'User <|-- Patient
'User ->"1" PatientFile : manages
'User -->"1" ContactInformation


abstract class HealthProfessional{
-consult(p: PatientFile)
'-modify()
}



Doctor --|> HealthProfessional
HealthProfessional -|> User

class MedicalEstablishment{

- String idEstablishment
- String establishmentName
- addContactInformation(c: ContactInformation)
}
MedicalEstablishment ->"1" ContactInformation
MedicalEstablishment "1" <- Doctor



class MedicalHistory{
    -String diagnostic
    -String treatment
    -String doctorName
    -Date startDisease
    -Date endDisease
'   -DatePair datePair
{method} + getMedicalHistory(): MedicalHistory
'    +getDoctorName(): String
}

class MedicalVisit{
    -String establishmentName
    -String doctorName
    -Date visitDate
    -String diagnostic
    -String treatment
    -String visitSummary
    -String notes
    +getMedicalVisit(): MedicalVisit
'    +getDoctorName(): String
'    +getEstablishmentName(): String
}

class Doctor{
    -String licenceNumber
    -String specialty
'    -String medicalEstablishment

    -consult(p: PatientFile)
    +modify(p: PatientFile)
}

class Patient {
'    -String lastName
'    -String firstName
'    -Date dateOfBirth
'    -String cityOfBirth
'    -String[] knownParents
    -consult(p: PatientFile)
'    +modify(p: PatientFile)
'    -consult(c: ContactInformation)
    +modify(c: ContactInformation)
}

class ContactInformation {
    - number: int
    - street: String
    - city: String
    - postalCode: String
    - phone: String
    - email: String
'    + modifyContactInfo()
    - validatePhone(phone: String): boolean
    - validateEmail(email: String): boolean
    - validatePostalCode(code: String): boolean
    + getContactInformation(): ContactInformation
}

'class Interface{
'}



interface Modifiable {
'    + Date date
    {method}+modify(t: T)

}
'PatientFile   .|> Modifiable

enum Gender{
    FEMALE,
    MALE,
    OTHER
}

'Interface -- Doctor
'Interface -- PatientFile


'Doctor -|> User

'PatientFile --> "\t\t\tconcerns\r1" Patient
PatientFile *--> "0..*" MedicalHistory
'MedicalHistory <-* "0..*" PatientFile
PatientFile *--> "0..*" MedicalVisit

User <|- Patient

'Patient -> Gender
PatientFile -> Gender

'Patient --> "1" ContactInformation
PatientFile --> "1" ContactInformation


@enduml
